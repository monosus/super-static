@import '/src/assets/_css/extends.css' layer(state);

@layer state {
  :is([data-bg='lazy'], [data-bg='in-view']) {
    background-image: unset;
  }

  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation: none;
      transition: none;
    }
  }

  [data-ui='modal'] {
    position: fixed;
    top: 0;
  }

  [data-ui='modal']:not(:target) {
    left: 200vw;
  }

  [data-ui='modal']:target {
    left: 0;
  }

  .faux-body:has([data-js-dialog][open]) {
    overflow: hidden;
  }

  /* popover api polyfill */
  [class='.\:popover-open'] {
    display: block;
  }

  dialog {
    &::backdrop {
      opacity: 1;
      transition: opacity 0.8s;

      &[open] {
        opacity: 1;

        @starting-style {
          opacity: 0;
        }
      }
    }

    &[open] {
      /*   0. BEFORE-OPEN STATE   */

      /*  initial state for what we're animating *in* from,
		  in this case: goes from lower (y + 20px) to center  */
      @starting-style {
        opacity: 0;
        transform: translateY(20px);
      }

      opacity: 1;

      /*   1. OPEN STATE   */

      /*  state when popover is open, BOTH:
		  what we're transitioning *in* to
		  and transitioning *out* from */
      transform: translateY(0);
    }

    /*   2. AFTER-OPEN-IS-CLOSED STATE   */

    /*  initial state for what we're animating *out* to ,
		in this case: goes from center to (y - 50px) higher */
    &:not([open]) {
      opacity: 0;
      transform: translateY(20px);
    }

    /*  enumarate transitioning properties, including display */
    transition:
      transform 0.3s,
      opacity 0.3s,
      display 0.5s ease-out;
    transition-behavior: allow-discrete;
  }
}
