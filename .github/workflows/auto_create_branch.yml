# このワークフローは、issueが割り当てられたときに自動的にブランチとドラフトのプルリクエストを作成し、
# その後、作成されたブランチ名とプルリクエストのチェックアウトコマンドをissueのコメントとして追加します。

name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 必要なラベルが存在するかチェック
      - name: Check for required labels
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          if [[ ! "$LABELS" =~ "enhancement" ]] && [[ ! "$LABELS" =~ "bug" ]] && [[ ! "$LABELS" =~ "documentation" ]]; then
            echo "Required label not found. Exiting..."
            exit 78  # Exits the job but does not fail the workflow
          fi

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        run: |
          PREFIX=""
          for label in $LABELS; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Gitユーザー名とメールアドレスを設定
      - name: Set up Git identity
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<email-address>"
      

User
以下のgithub actionsの作成されるブランチ名を調整したい。

# このワークフローは、issueが割り当てられたときに自動的にブランチとドラフトのプルリクエストを作成し、
# その後、作成されたブランチ名とプルリクエストのチェックアウトコマンドをissueのコメントとして追加します。

name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned

on:
  issues:
    types: [assigned]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      # リポジトリのコードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v4

      # issueのタイトルからプレフィックスを抽出
      - name: Extract prefix from issue title
        id: extract_prefix
        run: |
          PREFIX=$(echo "${{ github.event.issue.title }}" | grep -oE '^\[.*?\]' | tr -d '[]')
          echo "PREFIX=$PREFIX" >> $GITHUB_ENV

      # 新しいブランチを作成
      - name: Create new branch
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email ${{ secrets.TEST_EMAIL }}
          # PREFIXが空でない場合にアンダースコアを追加
          BRANCH_NAME_SUFFIX="${PREFIX:+_}${PREFIX}issue-${{ github.event.issue.number }}"
          git checkout -b $BRANCH_NAME_SUFFIX
          git push origin $BRANCH_NAME_SUFFIX
          echo "BRANCH_NAME=$BRANCH_NAME_SUFFIX" >> $GITHUB_ENV

      # 空のコミットを追加
      - name: Add empty commit
        run: |
          git commit --allow-empty -m "Empty commit for draft PR"
          git push origin $BRANCH_NAME

      # ドラフトのプルリクエストを作成
      - name: Create draft pull request
        id: create_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const branch_name = process.env.BRANCH_NAME;
            const pr_title = "${{ github.event.issue.title }}";
            const pr_body = `This is a draft PR for branch \`${branch_name}\` related to the issue #${{ github.event.issue.number }}.`;
            const prResponse = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: pr_title,
              body: pr_body,
              head: branch_name,
              base: 'main',
              draft: true
            });
            core.setOutput('pr_number', prResponse.data.number.toString());

      # issueにブランチ名とプルリクエストのチェックアウトコマンドをコメントとして追加
      - name: Comment on issue with branch name and PR checkout command
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = ${{ github.event.issue.number }};
            const branch_name = process.env.BRANCH_NAME;
            const pr_number = ${{ steps.create_pr.outputs.pr_number }};
            const message = `
            新しいブランチ \`${branch_name}\` が作成されました。
            Checkout with GitHub CLI:
            \`\`\`bash
            gh pr checkout ${pr_number}
            \`\`\`
            `;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });


要件
アサインだけでなくラベルも設定した際に発火する
ブランチ名はラベルからfeat,fix,docを条件分岐しissue numberと可能であれば英訳したissueタイトル。条件分岐はgithubの初期ラベルからよしなに判断してください。
ChatGPT
GitHub Actionsのワークフローを修正して、アサインとラベルが設定された際に発火し、ブランチ名を特定の形式で生成するようにすることは可能です。以下に、指定された要件に基づいてワークフローを修正した例を示します。

トリガーの追加: アサインとラベルが設定された際にワークフローが実行されるようにします。
ラベルに基づくブランチ名の生成: feat, fix, docのラベルに基づいてブランチ名のプレフィックスを設定し、さらにissue番号と英訳されたissueタイトルを含めます。
修正後のワークフロー
yaml
Copy code
name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        id: extract_and_generate
        run: |
          PREFIX=""
          for label in ${{ join(github.event.issue.labels.*.name, ' ') }}; do
            case $label in
              'feat'|'fix'|'doc') PREFIX=$label ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # 残りのステップは基本的に同じですが、BRANCH_NAMEの生成方法が変わります
      # 以下のステップ（新しいブランチの作成、空のコミットの追加、ドラフトPRの作成、コメントの追加）は同じまま続けます
説明
トリガーの追加: assignedとlabeledイベントの両方をトリガーとして設定しました。
ブランチ名の生成: まずラベルからfeat, fix, docを探し、見つかればそのラベルをプレフィックスとします。次に、issueタイトルから英数字とハイフンのみを含む文字列を生成し、これをブランチ名の一部とします。
このワークフローは、指定された要件に基づいて修正されていますが、GitHub Actionsの文脈において具体的なタスクの実装（例えばissueタイトルの英訳）は実際の環境や要件によって異なる可能性があることに注意してください。

User
githubのラベルの初期は
https://docs.github.com/ja/issues/using-labels-and-milestones-to-track-work/managing-labels
なのでそこからfeat,fix,docにもれなく条件分岐させてください。
ChatGPT
GitHubの初期ラベルを考慮に入れて、feat, fix, docに分岐させる条件を設定するには、GitHubが提供するデフォルトのラベルセットを基にして、各ラベルを適切なカテゴリーに分類します。GitHubの初期ラベルには以下のようなものが含まれます：

bug
documentation
duplicate
enhancement
good first issue
help wanted
invalid
question
wontfix
これらをfeat, fix, docに分類するためには、以下のような対応を行います：

feat（機能追加）: enhancement
fix（バグ修正）: bug
doc（ドキュメンテーション）: documentation
以下のワークフローは、これらのラベルに基づいてブランチ名を生成する方法を示しています。

修正後のワークフロー
yaml
Copy code
name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        id: extract_and_generate
        run: |
          PREFIX=""
          for label in ${{ join(github.event.issue.labels.*.name, ' ') }}; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # 以下のステップ（新しいブランチの作成、空のコミットの追加、ドラフトPRの作成、コメントの追加）は同じまま続けます
説明
ブランチ名の生成: enhancement, bug, documentationのラベルをそれぞれfeat, fix, docに対応させ、ブランチ名のプレフィックスとして使用します。
ブランチ名の形式: 生成されたプレフィックスに加え、issue番号と英数字・ハイフンのみを含むタイトルをブランチ名に組み込みます。
このワークフローはGitHubのデフォルトラベルに基づいていますが、プロジェクト固有のラベルがある場合は、それに応じて条件分岐を調整する必要があります。また、issueタイトルの英訳に関しては、このスクリプトではシンプルな文字置換のみを行っていますが、実際に英訳する機能を実装するには追加のステップやツールが必要です。

User
enhancement, bug, documentationが選ばれていなかったら発火しないようにしたい
ChatGPT
GitHub Actionsのワークフローを修正して、enhancement, bug, documentation のいずれかのラベルが選択されていない場合にはトリガーされないようにすることは可能です。この要件を満たすために、ワークフローの開始時にこれらのラベルが存在するかどうかをチェックするステップを追加します。以下にその例を示します。

修正後のワークフロー
yaml
Copy code
name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 必要なラベルが存在するかチェック
      - name: Check for required labels
        id: check_labels
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          if [[ ! "$LABELS" =~ "enhancement" ]] && [[ ! "$LABELS" =~ "bug" ]] && [[ ! "$LABELS" =~ "documentation" ]]; then
            echo "Required label not found. Exiting..."
            exit 78  # Exits the job but does not fail the workflow
          fi

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        id: extract_and_generate
        run: |
          PREFIX=""
          for label in $LABELS; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # 以下のステップ（新しいブランチの作成、空のコミットの追加、ドラフトPRの作成、コメントの追加）は同じまま続けます
説明
ラベルチェックの追加: ワークフローの冒頭で、enhancement, bug, documentation のいずれかのラベルがissueに適用されているかどうかをチェックします。これらのラベルがない場合は、ジョブを終了します（exit 78を使用）。
exit 78の使用: exit 78はジョブを終了させますが、ワークフロー全体を失敗としてマークしません。これにより、必要なラベルがない場合にジョブをスキップできます。
この修正により、enhancement, bug, documentation のいずれかがラベルとして設定されている場合にのみワークフローが実行されるようになります。

User
types: [assigned, labeled]
ではなく
アサイン誰かがされていてラベルがenhancement, bug, documentationのいずれかが選ばれたら発火させたい
ChatGPT
GitHub Actionsのワークフローを修正して、誰かがアサインされており、かつenhancement, bug, documentationのいずれかのラベルが選択されている場合にのみトリガーするようにするには、トリガーの条件を変更し、ジョブ内で必要な条件を確認するステップを追加します。

GitHub Actionsでは、複数のイベントタイプ（例：アサインされる、ラベルが追加される）が同時に発生する条件を直接指定することはできません。そのため、トリガーをissuesイベントのassignedタイプに設定し、スクリプト内でラベルの存在を確認する必要があります。

修正後のワークフロー
yaml
Copy code
name: Auto Create Branch, Draft PR, and Comment on Assigned Issue with Specific Label

on:
  issues:
    types: [assigned]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'enhancement') || contains(github.event.issue.labels.*.name, 'bug') || contains(github.event.issue.labels.*.name, 'documentation')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        id: extract_and_generate
        run: |
          PREFIX=""
          for label in ${{ join(github.event.issue.labels.*.name, ' ') }}; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # 以下のステップは同じまま続けます
説明
トリガーの変更: トリガーをassignedイベントのみに設定します。
条件付き実行: ifステートメントを使用して、issueにenhancement, bug, documentationのいずれかのラベルが付いている場合にのみジョブを実行します。
ブランチ名の生成: 前述と同じ方法でブランチ名を生成します。
この変更により、issueが誰かにアサインされ、かつ指定されたラベルのいずれかが付いている場合にのみ、ワークフローが実行されるようになります。

User
エラーが出てる

Run git commit --allow-empty -m "Empty commit for draft PR"
  git commit --allow-empty -m "Empty commit for draft PR"
  git push origin $BRANCH_NAME
  shell: /usr/bin/bash -e {0}
  env:
    BRANCH_NAME: _issue-1_test
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: empty ident name (for <runner@fv-az702-998.chqnz2sh3uyunc45c2qut5txpa.cx.internal.cloudapp.net>) not allowed
Error: Process completed with exit code 128.

現在のworkflow

# このワークフローは、issueが割り当てられたときに自動的にブランチとドラフトのプルリクエストを作成し、
# その後、作成されたブランチ名とプルリクエストのチェックアウトコマンドをissueのコメントとして追加します。

name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 必要なラベルが存在するかチェック
      - name: Check for required labels
        id: check_labels
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          if [[ ! "$LABELS" =~ "enhancement" ]] && [[ ! "$LABELS" =~ "bug" ]] && [[ ! "$LABELS" =~ "documentation" ]]; then
            echo "Required label not found. Exiting..."
            exit 78  # Exits the job but does not fail the workflow
          fi

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        id: extract_and_generate
        run: |
          PREFIX=""
          for label in $LABELS; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # 以下のステップ（新しいブランチの作成、空のコミットの追加、ドラフトPRの作成、コメントの追加）は同じまま続けます

      # 空のコミットを追加
      - name: Add empty commit
        run: |
          git commit --allow-empty -m "Empty commit for draft PR"
          git push origin $BRANCH_NAME

      # ドラフトのプルリクエストを作成
      - name: Create draft pull request
        id: create_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const branch_name = process.env.BRANCH_NAME;
            const pr_title = "${{ github.event.issue.title }}";
            const pr_body = `This is a draft PR for branch \`${branch_name}\` related to the issue #${{ github.event.issue.number }}.`;
            const prResponse = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: pr_title,
              body: pr_body,
              head: branch_name,
              base: 'main',
              draft: true
            });
            core.setOutput('pr_number', prResponse.data.number.toString());

      # issueにブランチ名とプルリクエストのチェックアウトコマンドをコメントとして追加
      - name: Comment on issue with branch name and PR checkout command
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = ${{ github.event.issue.number }};
            const branch_name = process.env.BRANCH_NAME;
            const pr_number = ${{ steps.create_pr.outputs.pr_number }};
            const message = `
            新しいブランチ \`${branch_name}\` が作成されました。
            Checkout with GitHub CLI:
            \`\`\`bash
            gh pr checkout ${pr_number}
            \`\`\`
            `;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
ChatGPT
エラーメッセージによると、問題は「Author identity unknown」ということで、GitHub Actionsの実行環境でGitのユーザー名とメールアドレスが設定されていないことが原因です。Gitはコミットする際にこれらの情報を必要とします。

この問題を解決するには、GitHub Actionsワークフロー内でGitのユーザー名とメールアドレスを設定するステップを追加する必要があります。以下に、その修正を行ったワークフローの例を示します。

修正後のワークフロー
yaml
Copy code
name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 必要なラベルが存在するかチェック
      - name: Check for required labels
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          if [[ ! "$LABELS" =~ "enhancement" ]] && [[ ! "$LABELS" =~ "bug" ]] && [[ ! "$LABELS" =~ "documentation" ]]; then
            echo "Required label not found. Exiting..."
            exit 78  # Exits the job but does not fail the workflow
          fi

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        run: |
          PREFIX=""
          for label in $LABELS; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Gitユーザー名とメールアドレスを設定
      - name: Set up Git identity
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<email-address>"

      # 空のコミットを追加
      - name: Add empty commit
        run: |
          git commit --allow-empty -m "Empty commit for draft PR"
          git push origin $BRANCH_NAME

      # 以下のステップは同じまま続けます
修正点
Gitユーザー名とメールアドレスの設定: 新たにSet up Git identityステップを追加し、ここでGitのユーザー名とメールアドレスを設定します。<email-address>は適切なメールアドレスに置き換えてください。
この修正により、GitHub ActionsがGitコマンドを実行する際に必要なユーザー情報が利用できるようになり、エラーが解消されるはずです。

User
まだエラー

Run git commit --allow-empty -m "Empty commit for draft PR"
  git commit --allow-empty -m "Empty commit for draft PR"
  git push origin $BRANCH_NAME
  shell: /usr/bin/bash -e {0}
  env:
    BRANCH_NAME: _issue-1_test
[main 5e24673] Empty commit for draft PR
error: src refspec _issue-1_test does not match any
error: failed to push some refs to 'https://github.com/monosus/super-static'
Error: Process completed with exit code 1.
ChatGPT
エラーメッセージ「error: src refspec _issue-1_test does not match any」は、指定されたブランチ名_issue-1_testがローカルリポジトリに存在しない、または正しく作成されていないことを示しています。これは通常、git checkout -b コマンドで新しいブランチを作成し忘れた、またはそのコマンドが失敗した場合に発生します。

GitHub Actionsワークフローを見ると、新しいブランチを作成するステップが抜けているようです。新しいブランチを作成し、そのブランチにコミットしてからプッシュする必要があります。

修正後のワークフロー
yaml
Copy code
name: Auto Create Branch, Draft PR, and Comment when Issue is Assigned and Labeled

on:
  issues:
    types: [assigned, labeled]

jobs:
  create_branch_and_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 必要なラベルが存在するかチェック
      - name: Check for required labels
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          if [[ ! "$LABELS" =~ "enhancement" ]] && [[ ! "$LABELS" =~ "bug" ]] && [[ ! "$LABELS" =~ "documentation" ]]; then
            echo "Required label not found. Exiting..."
            exit 78  # Exits the job but does not fail the workflow
          fi

      # issueのラベルとタイトルからプレフィックスとブランチ名を生成
      - name: Extract prefix and generate branch name
        run: |
          PREFIX=""
          for label in $LABELS; do
            case $label in
              'enhancement') PREFIX="feat" ;;
              'bug') PREFIX="fix" ;;
              'documentation') PREFIX="doc" ;;
            esac
          done
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr -s ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="${PREFIX}_issue-${{ github.event.issue.number }}_${ISSUE_TITLE}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Gitユーザー名とメールアドレスを設定
      - name: Set up Git identity
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<email-address>"

      # 新しいブランチを作成
      - name: Create new branch
        run: |
          git switch -c $BRANCH_NAME

      # 空のコミットを追加
      - name: Add empty commit
        run: |
          git commit --allow-empty -m "Empty commit for draft PR"
          git push origin $BRANCH_NAME

      # ドラフトのプルリクエストを作成
      - name: Create draft pull request
        id: create_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const branch_name = process.env.BRANCH_NAME;
            const pr_title = "${{ github.event.issue.title }}";
            const pr_body = `This is a draft PR for branch \`${branch_name}\` related to the issue #${{ github.event.issue.number }}.`;
            const prResponse = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: pr_title,
              body: pr_body,
              head: branch_name,
              base: 'main',
              draft: true
            });
            core.setOutput('pr_number', prResponse.data.number.toString());

      # issueにブランチ名とプルリクエストのチェックアウトコマンドをコメントとして追加
      - name: Comment on issue with branch name and PR checkout command
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = ${{ github.event.issue.number }};
            const branch_name = process.env.BRANCH_NAME;
            const pr_number = ${{ steps.create_pr.outputs.pr_number }};
            const message = `
            新しいブランチ \`${branch_name}\` が作成されました。
            Checkout with GitHub CLI:
            \`\`\`bash
            gh pr checkout ${pr_number}
            \`\`\`
            `;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
